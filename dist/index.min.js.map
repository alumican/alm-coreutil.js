{"version":3,"file":"index.min.js","sources":["../src/core/Type.ts","../src/core/ObjUtil.ts","../src/core/ArrUtil.ts","../src/core/DateUtil.ts","../src/core/NumUtil.ts","../src/core/StrUtil.ts","../src/math/Easing.ts"],"sourcesContent":["export module Type {\n\n\t/**\n\t * 引数がbooleanかどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合はboolean\n\t */\n\texport function isBoolean(value:any):boolean {\n\t\treturn typeof value === 'boolean';\n\t}\n\n\t/**\n\t * 引数が数値かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は数値\n\t */\n\texport function isNumber(value:any):boolean {\n\t\treturn typeof value === 'number' && isFinite(value);\n\t}\n\n\t/**\n\t * 引数が文字列値かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は文字列\n\t */\n\texport function isString(value:any):boolean {\n\t\treturn typeof value === 'string';\n\t}\n\n\t/**\n\t * 引数がfunctionかどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合はfunction\n\t */\n\texport function isFunction(value:any):boolean {\n\t\treturn typeof value === 'function';\n\t}\n\n\t/**\n\t * 引数がオブジェクトかどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合はobject\n\t */\n\texport function isObject(value:any):boolean {\n\t\treturn value !== null && typeof value === 'object';\n\t}\n\n\t/**\n\t * 引数が配列かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は配列\n\t */\n\texport function isArray(value:any):boolean {\n\t\treturn Array.isArray(value);\n\t}\n\n\t/**\n\t * 引数が空（null or undefined）かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は空\n\t */\n\texport function isNull(value:any):boolean {\n\t\treturn value === null || typeof value === 'undefined';\n\t}\n}\n","import {Type} from \"./Type\";\n\nexport module ObjUtil {\n\n\texport function each(target:any, func:(key:string, value:any) => void):void {\n\t\tif (!Type.isObject(target)) return;\n\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\tfunc(key, target[key]);\n\t\t});\n\t}\n\n\texport function get(target:any, key:string, defaultValue:any):any {\n\t\tconst value:any = target[key];\n\t\treturn !Type.isNull(value) ? value : defaultValue;\n\t}\n}\n","export module ArrUtil {\n\n\t/**\n\t * 等差数列を生成する\n\t * @param {number} count 要素数\n\t * @param {number} init 初期値\n\t * @param {number} step 等差\n\t * @returns {number[]} 出力配列\n\t */\n\texport function sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\tconst result:number[] = new Array(count);\n\t\tlet v:number = init;\n\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\tresult[i] = v;\n\t\t\tv += step;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 重複を削除したリストを生成する\n\t * @param list 入力配列\n\t * @returns {T[]} 出力配列\n\t */\n\texport function unique<T>(list:T[]):T[] {\n\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\treturn self.indexOf(x) === i;\n\t\t});\n\t}\n\n\t/**\n\t * 重複のみを抽出したリストを生成する\n\t * @param list 入力配列\n\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t * @returns {T[]} 出力配列\n\t */\n\texport function duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\tif (unique) {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t});\n\t\t} else {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 2つの入力配列に対して総当たり戦をおこなう\n\t * @param {T[]} list1 入力配列1\n\t * @param {T[]} list2 入力配列2\n\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t * @param callback.count コールバックの呼ばれた回数\n\t * @param callback.index1 入力配列1の現在のインデックス\n\t * @param callback.index2 入力配列2の現在のインデックス\n\t * @param callback.element1 入力配列1の現在の要素\n\t * @param callback.element2 入力配列2の現在の要素\n\t */\n\texport function roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\tlet i:number, j:number, p:number = 1;\n\t\tconst m:number = list1.length;\n\t\tconst n:number = list2.length;\n\t\tfor (i = 0; i < m; ++i) {\n\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * リスト内の要素を入れ替える\n\t * @param list 入出力配列\n\t * @param index1 インデックス1\n\t * @param index2 インデックス2\n\t */\n\texport function swap<T>(list:T[], index1:number, index2:number):void {\n\t\tconst tmp = list[index1];\n\t\tlist[index1] = list[index2];\n\t\tlist[index2] = tmp;\n\t}\n\n\t/**\n\t * リストをシャッフルする\n\t * by Fisher–Yatesアルゴリズム\n\t * @param list 入出力配列\n\t */\n\texport function shuffle<T>(list:T[]):void {\n\t\tfor(let i = list.length - 1; i > 0; --i) {\n\t\t\tswap(list, i, Math.floor(Math.random() * (i + 1)));\n\t\t}\n\t}\n\n\t/**\n\t * リストを数値としてソートする\n\t * @param list 入出力配列\n\t * @param asc trueで昇順, falseで降順\n\t */\n\texport function sort(list:number[], asc:boolean = true):void {\n\t\tlist.sort(asc ? function(a, b) { return a - b; } : function(a, b) { return b - a; });\n\t}\n\n\t/**\n\t * リストから1要素を選択して返す、元の配列は変更しない\n\t * @param list 配列\n\t * @returns {T} 選択された要素\n\t */\n\texport function choose<T>(list:T[]):T {\n\t\treturn list[Math.floor(Math.random() * list.length)];\n\t}\n\n\t/**\n\t * 空要素を削除した配列を返す、元の配列は変更しない\n\t * Booleanのコンストラクタを使って判定しているため、0も削除される\n\t * @param list 入力配列\n\t * @returns {T[]} 出力配列\n\t */\n\texport function clean<T>(list:T[]):T[] {\n\t\treturn list.filter(Boolean);\n\t}\n\n\n\t/**\n\t * 元の配列に対して、指定した関数を各要素に実行してfalseを返した要素を削除する\n\t * @param list 入力配列\n\t * @param f 各要素に実行する関数、falseを返すとその要素が削除される\n\t */\n\texport function update<T>(list:T[], f:(item:T) => (void | boolean)):void {\n\t\tlet n = list.length;\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst item = list[i];\n\t\t\tif (f(item) === false) {\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t\t--n;\n\t\t\t}\n\t\t}\n\t}\n}\n","export module DateUtil {\n\n\t/**\n\t * 現在の時刻(ミリ秒)を取得する\n\t * @returns {number} UNIX時間（ミリ秒）\n\t */\n\texport function now():number {\n\t\tif (!nowFunction) nowFunction = getNowFunction();\n\t\treturn nowFunction();\n\t}\n\n\tfunction getNowFunction():() => number {\n\t\t// for node.js\n\t\t// https://nodejs.org/api/process.html#processhrtimetime\n\t\tif (self && self['process'] && self['process'].hrtime !== undefined) {\n\t\t\tconst f = self['process'].hrtime;\n\t\t\treturn ():number => {\n\t\t\t\tconst t = f();\n\t\t\t\t// process.hrtime returns a array of [seconds, nanoseconds]\n\t\t\t\treturn t[0] * 1000 + t[1] / 1000000;\n\t\t\t};\n\t\t}\n\t\t// for browser (supported window.performance)\n\t\t// https://developer.mozilla.org/ja/docs/Web/API/Performance/now\n\t\tif (window?.performance?.now !== undefined) {\n\t\t\treturn window.performance.now.bind(window.performance);\n\t\t}\n\t\t// for browser (supported Date.now)\n\t\t// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/now\n\t\tif (window?.Date?.now !== undefined) {\n\t\t\treturn window.Date.now.bind(window.Date);\n\t\t}\n\t\t// else\n\t\t// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\n\t\treturn ():number => {\n\t\t\treturn new Date().getTime();\n\t\t};\n\t}\n\n\tlet nowFunction:() => number = null;\n}\n","import {EasingFunction} from \"../math/Easing\";\n\nexport module NumUtil {\n\n\t/**\n\t * 値を特定の範囲から範囲にマッピングする\n\t * @param {number} value 入力値\n\t * @param {number} srcA マッピング元範囲の境界値A\n\t * @param {number} srcB マッピング元範囲の境界値B\n\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t * @returns {number} 出力値\n\t */\n\n\texport function map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\tif (srcA === srcB) return dstA;\n\t\tif (clamp) {\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t}\n\t\t}\n\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t}\n\n\t/**\n\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t * @param {number} value 入力値\n\t * @param {number} srcA マッピング元範囲の境界値A\n\t * @param {number} srcB マッピング元範囲の境界値B\n\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t * @param {EasingFunction} easing イージング関関数\n\t * @returns {number} 出力値\n\t */\n\texport function ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\tif (srcA === srcB) return dstA;\n\t\tif (srcA < srcB) {\n\t\t\tif (value < srcA) value = srcA;\n\t\t\telse if (value > srcB) value = srcB;\n\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t} else {\n\t\t\tif (value < srcB) value = srcB;\n\t\t\telse if (value > srcA) value = srcA;\n\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t}\n\t}\n\n\t/**\n\t * 値を特定範囲内に丸める\n\t * @param {number} value 入力値\n\t * @param {number} min 最小値\n\t * @param {number} max 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function clamp(value:number, min:number, max:number):number {\n\t\treturn value < min ? min : (value > max ? max : value);\n\t}\n\n\t/**\n\t * 符号を保ったまま、値の絶対値を特定範囲内に丸める\n\t * @param {number} value 入力値\n\t * @param {number} minAbs 最小値\n\t * @param {number} maxAbs 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\tif (value > 0) {\n\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t} else {\n\t\t\tvalue = Math.abs(value);\n\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t}\n\t}\n\n\t/**\n\t * 2点間を線形補間する\n\t * @param {number} t 補間値\n\t * @param {number} a 開始値\n\t * @param {number} b 終了値\n\t * @param {boolean} clamp trueの場合は補間値を[a, b]の範囲内に丸める\n\t * @returns {number} 出力値 (t=0のときa, t=1のときb)\n\t */\n\texport function lerp(t:number, a:number, b:number, clamp:boolean = true):number {\n\t\tif (clamp) {\n\t\t\tif (t < 0) t = 0;\n\t\t\telse if (t > 1) t = 1;\n\t\t}\n\t\treturn a * (1 - t) + b * t;\n\t}\n\n\t/**\n\t * 乱数（小数）を取得する\n\t * @param {number} min 最小値\n\t * @param {number} max 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function random(min:number = 0, max:number = 1):number {\n\t\treturn min + (max - min) * Math.random();\n\t}\n\n\t/**\n\t * 乱数（整数）を取得する\n\t * @param {number} min 最小値\n\t * @param {number} max 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function randomInt(min:number = 0, max:number = 1):number {\n\t\treturn Math.floor(random(min, max + 1));\n\t}\n\n\t/**\n\t * 正負方向の同じ範囲で乱数を取得する\n\t * @param {number} min 最小値（正の数）\n\t * @param {number} max 最大値（正の数）\n\t * @returns {number} 出力値\n\t */\n\texport function randomAbs(min:number = 0, max:number = 1):number {\n\t\treturn random(min, max) * randomSign();\n\t}\n\n\t/**\n\t * +1もしくは-1を返す\n\t * @returns {number} 出力値\n\t */\n\texport function randomSign():number {\n\t\treturn Math.random() < 0.5 ? 1 : -1;\n\t}\n\n\t/**\n\t * 2点間の距離を取得する\n\t * @param {number} x1 点1のx座標\n\t * @param {number} y1 点1のy座標\n\t * @param {number} x2 点2のx座標\n\t * @param {number} y2 点2のy座標\n\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t * @returns {number} 距離\n\t */\n\texport function dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\tconst dx:number = x2 - x1;\n\t\tconst dy:number = y2 - y1;\n\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\t/**\n\t * 値をラジアン法から弧度法に変換する\n\t * @param {number} radian ラジアン法\n\t * @returns {number} 弧度法\n\t */\n\texport function radToDeg(radian:number):number {\n\t\treturn radian * RAD2DEG;\n\t}\n\n\t/**\n\t * 値を弧度法からラジアン法に変換する\n\t * @param {number} radian 弧度法\n\t * @returns {number} ラジアン法\n\t */\n\texport function degToRad(degree:number):number {\n\t\treturn degree * DEG2RAD;\n\t}\n\n\t/**\n\t * ある角度からある角度への回転角度を取得する\n\t * @param {number} from 元の角度\n\t * @param {number} to 目標の角度\n\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t * @returns {number} 回転角度\n\t */\n\texport function turn(from:number, to:number, radian:boolean = true):number {\n\t\treturn radian ? ((to - from + PI3) % PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t}\n\n\n// --------------------------------------------------\n//\n// CONST\n//\n// --------------------------------------------------\n\n\texport const PI:number = Math.PI;\n\texport const PI2:number = Math.PI * 2;\n\texport const PI3:number = Math.PI * 3;\n\texport const PI4:number = Math.PI * 4;\n\texport const PI5:number = Math.PI * 5;\n\texport const PI6:number = Math.PI * 6;\n\texport const PI_2:number = Math.PI / 2;\n\texport const PI_3:number = Math.PI / 3;\n\texport const PI_4:number = Math.PI / 4;\n\texport const PI_6:number = Math.PI / 6;\n\n\tconst RAD2DEG:number = 180 / Math.PI;\n\tconst DEG2RAD:number = Math.PI / 180;\n}\n","export module StrUtil {\n\n\t/**\n\t * 時間を h:mm:ss の形式で取得する\n\t * @param {number} hours 時\n\t * @param {number} minutes 分\n\t * @param {number} seconds 秒\n\t * @returns {string} h:mm:ss 形式の文字列\n\t */\n\texport function toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\tseconds += minutes * 60 + hours * 3600;\n\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\tif (h !== '0') {\n\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t} else {\n\t\t\treturn m + ':' + s;\n\t\t}\n\t}\n}\n","export type EasingFunction = (t:number) => number;\n\nexport module Easing {\n\n\t/**\n\t * Linear\n\t */\n\texport function linear(t:number):number {\n\t\treturn t;\n\t}\n\n\t/**\n\t * Quad\n\t */\n\texport function easeInQuad(t:number):number {\n\t\treturn (t /= 1) * t;\n\t}\n\n\texport function easeOutQuad(t:number):number {\n\t\treturn -(t /= 1) * (t - 2);\n\t}\n\n\texport function easeInOutQuad(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t}\n\n\t/**\n\t * Cubic\n\t */\n\texport function easeInCubic(t:number):number {\n\t\treturn (t /= 1) * t * t;\n\t}\n\n\texport function easeOutCubic(t:number):number {\n\t\treturn (t = t - 1) * t * t + 1;\n\t}\n\n\texport function easeInOutCubic(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t}\n\n\t/**\n\t * Quart\n\t */\n\texport function easeInQuart(t:number):number {\n\t\treturn (t /= 1) * t * t * t;\n\t}\n\n\texport function easeOutQuart(t:number):number {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t}\n\n\texport function easeInOutQuart(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t}\n\n\t/**\n\t * Quint\n\t */\n\texport function easeInQuint(t:number):number {\n\t\treturn (t /= 1) * t * t * t * t;\n\t}\n\n\texport function easeOutQuint(t:number):number {\n\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t}\n\n\texport function easeInOutQuint(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t}\n\n\t/**\n\t * Sine\n\t */\n\texport function easeInSine(t:number):number {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t}\n\n\texport function easeOutSine(t:number):number {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t}\n\n\texport function easeInOutSine(t:number):number {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t}\n\n\t/**\n\t * Expo\n\t */\n\texport function easeInExpo(t:number):number {\n\t\tif (t === 0) return 0;\n\t\treturn Math.pow(2, 10 * (t - 1));\n\t}\n\n\texport function easeOutExpo(t:number):number {\n\t\tif (t === 1) return 1;\n\t\treturn -Math.pow(2, -10 * t) + 1;\n\t}\n\n\texport function easeInOutExpo(t:number):number {\n\t\tif (t === 0) return 0;\n\t\tif (t === 1) return 1;\n\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t}\n\n\t/**\n\t * Circ\n\t */\n\texport function easeInCirc(t:number):number {\n\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t}\n\n\texport function easeOutCirc(t:number):number {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t}\n\n\texport function easeInOutCirc(t:number):number {\n\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t}\n\n\t/**\n\t * Elastic\n\t */\n\texport function createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tlet p:number = 0;\n\t\t\tlet a:number = 1;\n\t\t\tif (t === 0) return 0;\n\t\t\tif ((t /= 1) === 1) return 1;\n\t\t\tif (p === 0) p = 0.3;\n\t\t\tif (a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t}\n\t}\n\n\texport function createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tlet p:number = 0;\n\t\t\tlet a:number = 1;\n\t\t\tif (t === 0) return 0;\n\t\t\tif ((t /= 1) === 1) return 1;\n\t\t\tif (p === 0) p = 0.3;\n\t\t\tif (a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t}\n\t}\n\n\texport function createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tlet p:number = 0;\n\t\t\tlet a:number = 1;\n\t\t\tif (t === 0) return 0;\n\t\t\tif ((t /= 0.5) === 2) return 1;\n\t\t\tif (p === 0) p = 0.3 * 1.5;\n\t\t\tif (a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t}\n\t}\n\n\texport function easeInElastic(t:number):number {\n\t\treturn defaultEaseInElastic(t);\n\t}\n\n\texport function easeOutElastic(t:number):number {\n\t\treturn defaultEaseOutElastic(t);\n\t}\n\n\texport function easeInOutElastic(t:number):number {\n\t\treturn defaultEaseInOutElastic(t);\n\t}\n\n\texport const defaultEaseInElastic:EasingFunction = createEaseInElastic();\n\texport const defaultEaseOutElastic:EasingFunction = createEaseOutElastic();\n\texport const defaultEaseInOutElastic:EasingFunction = createEaseInOutElastic();\n\n\t/**\n\t * Back\n\t */\n\texport function createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t}\n\t}\n\n\texport function createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t}\n\t}\n\n\texport function createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t}\n\t}\n\n\texport function easeInBack(t:number):number {\n\t\treturn defaultEaseInBack(t);\n\t}\n\n\texport function easeOutBack(t:number):number {\n\t\treturn defaultEaseOutBack(t);\n\t}\n\n\texport function easeInOutBack(t:number):number {\n\t\treturn defaultEaseInOutBack(t);\n\t}\n\n\texport const defaultEaseInBack:EasingFunction = createEaseInBack();\n\texport const defaultEaseOutBack:EasingFunction = createEaseOutBack();\n\texport const defaultEaseInOutBack:EasingFunction = createEaseInOutBack();\n\n\t/**\n\t * Bounce\n\t */\n\texport function easeInBounce(t:number):number {\n\t\treturn 1 - easeOutBounce(1 - t);\n\t}\n\n\texport function easeOutBounce(t:number):number {\n\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t} else if (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t} else {\n\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t}\n\t}\n\n\texport function easeInOutBounce(t:number):number {\n\t\tif (t < 0.5) return easeInBounce(t * 2) * 0.5;\n\t\treturn easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n}\n"],"names":["Type","ObjUtil","exports","isBoolean","value","isNumber","isFinite","isString","isFunction","isObject","isArray","Array","isNull","ArrUtil","swap","list","index1","index2","tmp","sequence","count","init","step","result","v","i","unique","filter","x","self","indexOf","duplicated","lastIndexOf","roundRobin","list1","list2","callback","j","p","m","length","n","shuffle","Math","floor","random","sort","asc","a","b","choose","clean","Boolean","update","f","splice","DateUtil","now","nowFunction","undefined","hrtime","t","_a","window","performance","bind","_b","Date","getTime","getNowFunction","NumUtil","min","max","randomSign","map","srcA","srcB","dstA","dstB","clamp","ease","easing","clampAbs","minAbs","maxAbs","abs","lerp","randomInt","randomAbs","dist","x1","y1","x2","y2","squared","dx","dy","sqrt","radToDeg","radian","RAD2DEG","degToRad","degree","DEG2RAD","turn","from","to","PI3","PI2","PI","PI4","PI5","PI6","PI_2","PI_3","PI_4","PI_6","each","target","func","Object","keys","forEach","key","get","defaultValue","StrUtil","toTimeString","hours","minutes","seconds","h","toString","s","substr","Easing","createEaseInElastic","asin","pow","sin","createEaseOutElastic","createEaseInOutElastic","createEaseInBack","createEaseOutBack","createEaseInOutBack","easeInBounce","easeOutBounce","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","defaultEaseInElastic","easeOutElastic","defaultEaseOutElastic","easeInOutElastic","defaultEaseInOutElastic","easeInBack","defaultEaseInBack","easeOutBack","defaultEaseOutBack","easeInOutBack","defaultEaseInOutBack","easeInOutBounce"],"mappings":"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"}