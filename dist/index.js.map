{"version":3,"file":"index.js","sources":["../src/core/Type.ts","../src/core/ArrUtil.ts","../src/core/DateUtil.ts","../src/core/NumUtil.ts","../src/core/ObjUtil.ts","../src/core/StrUtil.ts","../src/math/Easing.ts"],"sourcesContent":["export module Type {\n\n\t/**\n\t * 引数がbooleanかどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合はboolean\n\t */\n\texport function isBoolean(value:any):boolean {\n\t\treturn typeof value === 'boolean';\n\t}\n\n\t/**\n\t * 引数が数値かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は数値\n\t */\n\texport function isNumber(value:any):boolean {\n\t\treturn typeof value === 'number' && isFinite(value);\n\t}\n\n\t/**\n\t * 引数が文字列値かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は文字列\n\t */\n\texport function isString(value:any):boolean {\n\t\treturn typeof value === 'string';\n\t}\n\n\t/**\n\t * 引数がfunctionかどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合はfunction\n\t */\n\texport function isFunction(value:any):boolean {\n\t\treturn typeof value === 'function';\n\t}\n\n\t/**\n\t * 引数がオブジェクトかどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合はobject\n\t */\n\texport function isObject(value:any):boolean {\n\t\treturn value !== null && typeof value === 'object';\n\t}\n\n\t/**\n\t * 引数が配列かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は配列\n\t */\n\texport function isArray(value:any):boolean {\n\t\treturn Array.isArray(value);\n\t}\n\n\t/**\n\t * 引数が空（null or undefined）かどうかを判断する\n\t * @param {number} value 入力値\n\t * @returns {boolean} trueの場合は空\n\t */\n\texport function isNull(value:any):boolean {\n\t\treturn value === null || typeof value === 'undefined';\n\t}\n}\n","export module ArrUtil {\n\n\t/**\n\t * 等差数列を生成する\n\t * @param {number} count 要素数\n\t * @param {number} init 初期値\n\t * @param {number} step 等差\n\t * @returns {number[]} 出力配列\n\t */\n\texport function sequence(count:number, init:number = 0, step:number = 1):number[] {\n\t\tconst result:number[] = new Array(count);\n\t\tlet v:number = init;\n\t\tfor (let i:number = 0; i < count; ++i) {\n\t\t\tresult[i] = v;\n\t\t\tv += step;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * 重複を削除したリストを生成する\n\t * @param list 入力配列\n\t * @returns {T[]} 出力配列\n\t */\n\texport function unique<T>(list:T[]):T[] {\n\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\treturn self.indexOf(x) === i;\n\t\t});\n\t}\n\n\t/**\n\t * 重複のみを抽出したリストを生成する\n\t * @param list 入力配列\n\t * @param unique trueの場合は、重複したものの中を重複しないようにする\n\t * @returns {T[]} 出力配列\n\t */\n\texport function duplicated<T>(list:T[], unique:boolean = false):T[] {\n\n\t\tif (unique) {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn self.indexOf(x) !== self.lastIndexOf(x);\n\t\t\t});\n\t\t} else {\n\t\t\treturn list.filter(function (x:T, i:number, self:T[]) {\n\t\t\t\treturn (self.indexOf(x) === i) && (self.lastIndexOf(x) !== i);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * 2つの入力配列に対して総当たり戦をおこなう\n\t * @param {T[]} list1 入力配列1\n\t * @param {T[]} list2 入力配列2\n\t * @param {(count: number, index1: number, index2: number, element1: T, element2: T) => void} callback コールバック関数\n\t * @param callback.count コールバックの呼ばれた回数\n\t * @param callback.index1 入力配列1の現在のインデックス\n\t * @param callback.index2 入力配列2の現在のインデックス\n\t * @param callback.element1 入力配列1の現在の要素\n\t * @param callback.element2 入力配列2の現在の要素\n\t */\n\texport function roundRobin<T>(list1:T[], list2:T[], callback:(count:number, index1:number, index2:number, element1:T, element2:T) => void):void {\n\t\tlet i:number, j:number, p:number = 1;\n\t\tconst m:number = list1.length;\n\t\tconst n:number = list2.length;\n\t\tfor (i = 0; i < m; ++i) {\n\t\t\tfor (j = i + 1; j < n; ++j) {\n\t\t\t\tcallback(p++, i, j, list1[i], list2[j]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * リスト内の要素を入れ替える\n\t * @param list 入出力配列\n\t * @param index1 インデックス1\n\t * @param index2 インデックス2\n\t */\n\texport function swap<T>(list:T[], index1:number, index2:number):void {\n\t\tconst tmp = list[index1];\n\t\tlist[index1] = list[index2];\n\t\tlist[index2] = tmp;\n\t}\n\n\t/**\n\t * リストをシャッフルする\n\t * by Fisher–Yatesアルゴリズム\n\t * @param list 入出力配列\n\t */\n\texport function shuffle<T>(list:T[]):void {\n\t\tfor(let i = list.length - 1; i > 0; --i) {\n\t\t\tswap(list, i, Math.floor(Math.random() * (i + 1)));\n\t\t}\n\t}\n\n\t/**\n\t * リストを数値としてソートする\n\t * @param list 入出力配列\n\t * @param asc trueで昇順, falseで降順\n\t */\n\texport function sort(list:number[], asc:boolean = true):void {\n\t\tlist.sort(asc ? function(a, b) { return a - b; } : function(a, b) { return b - a; });\n\t}\n\n\t/**\n\t * リストから1要素を選択して返す、元の配列は変更しない\n\t * @param list 配列\n\t * @returns {T} 選択された要素\n\t */\n\texport function choose<T>(list:T[]):T {\n\t\treturn list[Math.floor(Math.random() * list.length)];\n\t}\n\n\t/**\n\t * 空要素を削除した配列を返す、元の配列は変更しない\n\t * Booleanのコンストラクタを使って判定しているため、0も削除される\n\t * @param list 入力配列\n\t * @returns {T[]} 出力配列\n\t */\n\texport function clean<T>(list:T[]):T[] {\n\t\treturn list.filter(Boolean);\n\t}\n\n\n\t/**\n\t * 元の配列に対して、指定した関数を各要素に実行してfalseを返した要素を削除する\n\t * @param list 入力配列\n\t * @param f 各要素に実行する関数、falseを返すとその要素が削除される\n\t */\n\texport function update<T>(list:T[], f:(item:T) => (void | boolean)):void {\n\t\tlet n = list.length;\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst item = list[i];\n\t\t\tif (f(item) === false) {\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\t--i;\n\t\t\t\t--n;\n\t\t\t}\n\t\t}\n\t}\n}\n","export module DateUtil {\n\n\t/**\n\t * 現在の時刻(ミリ秒)を取得する\n\t * @returns {number} UNIX時間（ミリ秒）\n\t */\n\texport function now():number {\n\t\tif (!nowFunction) nowFunction = getNowFunction();\n\t\treturn nowFunction();\n\t}\n\n\tfunction getNowFunction():() => number {\n\t\t// for node.js\n\t\t// https://nodejs.org/api/process.html#processhrtimetime\n\t\tif (self && self['process'] && self['process'].hrtime !== undefined) {\n\t\t\tconst f = self['process'].hrtime;\n\t\t\treturn ():number => {\n\t\t\t\tconst t = f();\n\t\t\t\t// process.hrtime returns a array of [seconds, nanoseconds]\n\t\t\t\treturn t[0] * 1000 + t[1] / 1000000;\n\t\t\t};\n\t\t}\n\t\t// for browser (supported window.performance)\n\t\t// https://developer.mozilla.org/ja/docs/Web/API/Performance/now\n\t\tif (window?.performance?.now !== undefined) {\n\t\t\treturn window.performance.now.bind(window.performance);\n\t\t}\n\t\t// for browser (supported Date.now)\n\t\t// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/now\n\t\tif (window?.Date?.now !== undefined) {\n\t\t\treturn window.Date.now.bind(window.Date);\n\t\t}\n\t\t// else\n\t\t// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\n\t\treturn ():number => {\n\t\t\treturn new Date().getTime();\n\t\t};\n\t}\n\n\tlet nowFunction:() => number = null;\n}\n","import {EasingFunction} from \"../math/Easing\";\n\nexport module NumUtil {\n\n\t/**\n\t * 値を特定の範囲から範囲にマッピングする\n\t * @param {number} value 入力値\n\t * @param {number} srcA マッピング元範囲の境界値A\n\t * @param {number} srcB マッピング元範囲の境界値B\n\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t * @param {boolean} clamp trueの場合は入力値を[srcA, srcB]の範囲内に丸める\n\t * @returns {number} 出力値\n\t */\n\n\texport function map(value:number, srcA:number, srcB:number, dstA:number, dstB:number, clamp:boolean = true):number {\n\t\tif (srcA === srcB) return dstA;\n\t\tif (clamp) {\n\t\t\tif (srcA < srcB) {\n\t\t\t\tif (value < srcA) value = srcA;\n\t\t\t\telse if (value > srcB) value = srcB;\n\t\t\t} else {\n\t\t\t\tif (value < srcB) value = srcB;\n\t\t\t\telse if (value > srcA) value = srcA;\n\t\t\t}\n\t\t}\n\t\treturn (value - srcA) * (dstB - dstA) / (srcB - srcA) + dstA;\n\t}\n\n\t/**\n\t * 値を特定の範囲からイージング関数を経由して特定の範囲にマッピングする\n\t * @param {number} value 入力値\n\t * @param {number} srcA マッピング元範囲の境界値A\n\t * @param {number} srcB マッピング元範囲の境界値B\n\t * @param {number} dstA マッピング元の値Aに対応するマッピング先の値\n\t * @param {number} dstB マッピング元の値Bに対応するマッピング先の値\n\t * @param {EasingFunction} easing イージング関関数\n\t * @returns {number} 出力値\n\t */\n\texport function ease(value:number, srcA:number, srcB:number, dstA:number, dstB:number, easing:EasingFunction):number {\n\t\tif (srcA === srcB) return dstA;\n\t\tif (srcA < srcB) {\n\t\t\tif (value < srcA) value = srcA;\n\t\t\telse if (value > srcB) value = srcB;\n\t\t\treturn easing((value - srcA) / (srcB - srcA)) * (dstB - dstA) + dstA;\n\t\t} else {\n\t\t\tif (value < srcB) value = srcB;\n\t\t\telse if (value > srcA) value = srcA;\n\t\t\treturn easing((value - srcB) / (srcA - srcB)) * (dstB - dstA) + dstA;\n\t\t}\n\t}\n\n\t/**\n\t * 値を特定範囲内に丸める\n\t * @param {number} value 入力値\n\t * @param {number} min 最小値\n\t * @param {number} max 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function clamp(value:number, min:number, max:number):number {\n\t\treturn value < min ? min : (value > max ? max : value);\n\t}\n\n\t/**\n\t * 符号を保ったまま、値の絶対値を特定範囲内に丸める\n\t * @param {number} value 入力値\n\t * @param {number} minAbs 最小値\n\t * @param {number} maxAbs 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function clampAbs(value:number, minAbs:number, maxAbs:number):number {\n\t\tif (value > 0) {\n\t\t\treturn value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value);\n\t\t} else {\n\t\t\tvalue = Math.abs(value);\n\t\t\treturn -(value < minAbs ? minAbs : (value > maxAbs ? maxAbs : value));\n\t\t}\n\t}\n\n\t/**\n\t * 2点間を線形補間する\n\t * @param {number} t 補間値\n\t * @param {number} a 開始値\n\t * @param {number} b 終了値\n\t * @param {boolean} clamp trueの場合は補間値を[a, b]の範囲内に丸める\n\t * @returns {number} 出力値 (t=0のときa, t=1のときb)\n\t */\n\texport function lerp(t:number, a:number, b:number, clamp:boolean = true):number {\n\t\tif (clamp) {\n\t\t\tif (t < 0) t = 0;\n\t\t\telse if (t > 1) t = 1;\n\t\t}\n\t\treturn a * (1 - t) + b * t;\n\t}\n\n\t/**\n\t * 乱数（小数）を取得する\n\t * @param {number} min 最小値\n\t * @param {number} max 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function random(min:number = 0, max:number = 1):number {\n\t\treturn min + (max - min) * Math.random();\n\t}\n\n\t/**\n\t * 乱数（整数）を取得する\n\t * @param {number} min 最小値\n\t * @param {number} max 最大値\n\t * @returns {number} 出力値\n\t */\n\texport function randomInt(min:number = 0, max:number = 1):number {\n\t\treturn Math.floor(random(min, max + 1));\n\t}\n\n\t/**\n\t * 正負方向の同じ範囲で乱数を取得する\n\t * @param {number} min 最小値（正の数）\n\t * @param {number} max 最大値（正の数）\n\t * @returns {number} 出力値\n\t */\n\texport function randomAbs(min:number = 0, max:number = 1):number {\n\t\treturn random(min, max) * randomSign();\n\t}\n\n\t/**\n\t * +1もしくは-1を返す\n\t * @returns {number} 出力値\n\t */\n\texport function randomSign():number {\n\t\treturn Math.random() < 0.5 ? 1 : -1;\n\t}\n\n\t/**\n\t * 2点間の距離を取得する\n\t * @param {number} x1 点1のx座標\n\t * @param {number} y1 点1のy座標\n\t * @param {number} x2 点2のx座標\n\t * @param {number} y2 点2のy座標\n\t * @param {boolean} squared trueの場合は2乗の値を取得する\n\t * @returns {number} 距離\n\t */\n\texport function dist(x1:number, y1:number, x2:number, y2:number, squared:boolean = false):number {\n\t\tconst dx:number = x2 - x1;\n\t\tconst dy:number = y2 - y1;\n\t\treturn squared ? (dx * dx + dy * dy) : Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\t/**\n\t * 値をラジアン法から弧度法に変換する\n\t * @param {number} radian ラジアン法\n\t * @returns {number} 弧度法\n\t */\n\texport function radToDeg(radian:number):number {\n\t\treturn radian * RAD2DEG;\n\t}\n\n\t/**\n\t * 値を弧度法からラジアン法に変換する\n\t * @param {number} radian 弧度法\n\t * @returns {number} ラジアン法\n\t */\n\texport function degToRad(degree:number):number {\n\t\treturn degree * DEG2RAD;\n\t}\n\n\t/**\n\t * ある角度からある角度への回転角度を取得する\n\t * @param {number} from 元の角度\n\t * @param {number} to 目標の角度\n\t * @param {boolean} radian trueの場合はラジアン法で計算する\n\t * @returns {number} 回転角度\n\t */\n\texport function turn(from:number, to:number, radian:boolean = true):number {\n\t\treturn radian ? ((to - from + PI3) % PI2 - Math.PI) : ((to - from + 540) % 360 - 180);\n\t}\n\n\n// --------------------------------------------------\n//\n// CONST\n//\n// --------------------------------------------------\n\n\texport const PI:number = Math.PI;\n\texport const PI2:number = Math.PI * 2;\n\texport const PI3:number = Math.PI * 3;\n\texport const PI4:number = Math.PI * 4;\n\texport const PI5:number = Math.PI * 5;\n\texport const PI6:number = Math.PI * 6;\n\texport const PI_2:number = Math.PI / 2;\n\texport const PI_3:number = Math.PI / 3;\n\texport const PI_4:number = Math.PI / 4;\n\texport const PI_6:number = Math.PI / 6;\n\n\tconst RAD2DEG:number = 180 / Math.PI;\n\tconst DEG2RAD:number = Math.PI / 180;\n}\n","import {Type} from \"./Type\";\n\nexport module ObjUtil {\n\n\texport function each(target:any, func:(key:string, value:any) => void):void {\n\t\tif (!Type.isObject(target)) return;\n\t\tObject.keys(target).forEach((key:string):void => {\n\t\t\tfunc(key, target[key]);\n\t\t});\n\t}\n\n\texport function get(target:any, key:string, defaultValue:any):any {\n\t\tconst value:any = target[key];\n\t\treturn !Type.isNull(value) ? value : defaultValue;\n\t}\n}\n","export module StrUtil {\n\n\t/**\n\t * 時間を h:mm:ss の形式で取得する\n\t * @param {number} hours 時\n\t * @param {number} minutes 分\n\t * @param {number} seconds 秒\n\t * @returns {string} h:mm:ss 形式の文字列\n\t */\n\texport function toTimeString(hours:number = 0, minutes:number = 0, seconds:number = 0):string {\n\t\tseconds += minutes * 60 + hours * 3600;\n\t\tlet h:string = Math.floor(seconds / 3600).toString();\n\t\tlet m:string = Math.floor((seconds / 60) % 60).toString();\n\t\tlet s:string = ('0' + Math.floor(seconds % 60)).substr(-2, 2);\n\t\tif (h !== '0') {\n\t\t\treturn h + ':' + ('0' + m).substr(-2, 2) + ':' + s;\n\t\t} else {\n\t\t\treturn m + ':' + s;\n\t\t}\n\t}\n}\n","export type EasingFunction = (t:number) => number;\n\nexport module Easing {\n\n\t/**\n\t * Linear\n\t */\n\texport function linear(t:number):number {\n\t\treturn t;\n\t}\n\n\t/**\n\t * Quad\n\t */\n\texport function easeInQuad(t:number):number {\n\t\treturn (t /= 1) * t;\n\t}\n\n\texport function easeOutQuad(t:number):number {\n\t\treturn -(t /= 1) * (t - 2);\n\t}\n\n\texport function easeInOutQuad(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t;\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t}\n\n\t/**\n\t * Cubic\n\t */\n\texport function easeInCubic(t:number):number {\n\t\treturn (t /= 1) * t * t;\n\t}\n\n\texport function easeOutCubic(t:number):number {\n\t\treturn (t = t - 1) * t * t + 1;\n\t}\n\n\texport function easeInOutCubic(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t;\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t}\n\n\t/**\n\t * Quart\n\t */\n\texport function easeInQuart(t:number):number {\n\t\treturn (t /= 1) * t * t * t;\n\t}\n\n\texport function easeOutQuart(t:number):number {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t}\n\n\texport function easeInOutQuart(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t;\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t}\n\n\t/**\n\t * Quint\n\t */\n\texport function easeInQuint(t:number):number {\n\t\treturn (t /= 1) * t * t * t * t;\n\t}\n\n\texport function easeOutQuint(t:number):number {\n\t\treturn ((t = t - 1) * t * t * t * t + 1);\n\t}\n\n\texport function easeInOutQuint(t:number):number {\n\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * t * t * t;\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t}\n\n\t/**\n\t * Sine\n\t */\n\texport function easeInSine(t:number):number {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t}\n\n\texport function easeOutSine(t:number):number {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t}\n\n\texport function easeInOutSine(t:number):number {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t}\n\n\t/**\n\t * Expo\n\t */\n\texport function easeInExpo(t:number):number {\n\t\tif (t === 0) return 0;\n\t\treturn Math.pow(2, 10 * (t - 1));\n\t}\n\n\texport function easeOutExpo(t:number):number {\n\t\tif (t === 1) return 1;\n\t\treturn -Math.pow(2, -10 * t) + 1;\n\t}\n\n\texport function easeInOutExpo(t:number):number {\n\t\tif (t === 0) return 0;\n\t\tif (t === 1) return 1;\n\t\tif ((t /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (t - 1));\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t}\n\n\t/**\n\t * Circ\n\t */\n\texport function easeInCirc(t:number):number {\n\t\treturn -(Math.sqrt(1 - (t /= 1) * t) - 1);\n\t}\n\n\texport function easeOutCirc(t:number):number {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t}\n\n\texport function easeInOutCirc(t:number):number {\n\t\tif ((t /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t}\n\n\t/**\n\t * Elastic\n\t */\n\texport function createEaseInElastic(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tlet p:number = 0;\n\t\t\tlet a:number = 1;\n\t\t\tif (t === 0) return 0;\n\t\t\tif ((t /= 1) === 1) return 1;\n\t\t\tif (p === 0) p = 0.3;\n\t\t\tif (a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t}\n\t}\n\n\texport function createEaseOutElastic(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tlet p:number = 0;\n\t\t\tlet a:number = 1;\n\t\t\tif (t === 0) return 0;\n\t\t\tif ((t /= 1) === 1) return 1;\n\t\t\tif (p === 0) p = 0.3;\n\t\t\tif (a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t\t}\n\t}\n\n\texport function createEaseInOutElastic(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tlet p:number = 0;\n\t\t\tlet a:number = 1;\n\t\t\tif (t === 0) return 0;\n\t\t\tif ((t /= 0.5) === 2) return 1;\n\t\t\tif (p === 0) p = 0.3 * 1.5;\n\t\t\tif (a < 1) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\tif (t < 1) return -0.5 * a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p);\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t}\n\t}\n\n\texport function easeInElastic(t:number):number {\n\t\treturn defaultEaseInElastic(t);\n\t}\n\n\texport function easeOutElastic(t:number):number {\n\t\treturn defaultEaseOutElastic(t);\n\t}\n\n\texport function easeInOutElastic(t:number):number {\n\t\treturn defaultEaseInOutElastic(t);\n\t}\n\n\texport const defaultEaseInElastic:EasingFunction = createEaseInElastic();\n\texport const defaultEaseOutElastic:EasingFunction = createEaseOutElastic();\n\texport const defaultEaseInOutElastic:EasingFunction = createEaseInOutElastic();\n\n\t/**\n\t * Back\n\t */\n\texport function createEaseInBack(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\treturn (t /= 1) * t * ((s + 1) * t - s);\n\t\t}\n\t}\n\n\texport function createEaseOutBack(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t\t}\n\t}\n\n\texport function createEaseInOutBack(s:number = 1.70158):EasingFunction {\n\t\treturn function (t:number) {\n\t\t\tif ((t /= 0.5) < 1) return 0.5 * t * t * (((s *= 1.525) + 1) * t - s);\n\t\t\treturn 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n\t\t}\n\t}\n\n\texport function easeInBack(t:number):number {\n\t\treturn defaultEaseInBack(t);\n\t}\n\n\texport function easeOutBack(t:number):number {\n\t\treturn defaultEaseOutBack(t);\n\t}\n\n\texport function easeInOutBack(t:number):number {\n\t\treturn defaultEaseInOutBack(t);\n\t}\n\n\texport const defaultEaseInBack:EasingFunction = createEaseInBack();\n\texport const defaultEaseOutBack:EasingFunction = createEaseOutBack();\n\texport const defaultEaseInOutBack:EasingFunction = createEaseInOutBack();\n\n\t/**\n\t * Bounce\n\t */\n\texport function easeInBounce(t:number):number {\n\t\treturn 1 - easeOutBounce(1 - t);\n\t}\n\n\texport function easeOutBounce(t:number):number {\n\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t} else if (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t} else {\n\t\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t\t}\n\t}\n\n\texport function easeInOutBounce(t:number):number {\n\t\tif (t < 0.5) return easeInBounce(t * 2) * 0.5;\n\t\treturn easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n}\n"],"names":["Type","ArrUtil","DateUtil","NumUtil","ObjUtil","StrUtil","Easing"],"mappings":"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"}